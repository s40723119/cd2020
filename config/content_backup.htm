<h1>每週編譯內容</h1>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week1.html">week1-架設cmsimde</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week2.html">week2-python3.8.2更新</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week3.html">week3</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week4.html">week4-分組討論及小組會議</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week5.html">week5-連假在家做口罩</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week6.html">week6</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week7.html">week7</a></p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/week8.html">week8-如何架設直播課程</a></p>
<h2>week1</h2>
<p>建立cmsimde網站</p>
<p>1.<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view">2019Fall可攜套件.7z</a></p>
<p>2.在github下建立一個cd2020倉儲</p>
<p>3.git clone https://github.com/s40723119/cd2020.git</p>
<p>4.如果CMSIMDE為空白，單獨git clone https://github.com/mdecourse/cmsimde.git</p>
<p>5.git submodule add <a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a></p>
<p>6.進入CMSIMDE，將up_dirup_dir內檔案複製到cd2020</p>
<p>7.進入CMSIMDE，打python wsgi.py開始編輯網站</p>
<p></p>
<h2>week2</h2>
<p>python3.8.2更新</p>
<p>1.在<a href="https://www.python.org/downloads/">python官網</a>下載python3.8.2安裝包</p>
<p>2.執行並點選Modify</p>
<p>3.將pip選項關閉</p>
<p><img alt="" height="256" src="/images/python-3.8.2_2020-03-25_11-04-16.png" width="416"/></p>
<p>4.下一步直到安裝完成</p>
<p>5.更改啟動器路徑</p>
<p><img alt="" height="185" src="/images/SciTE_2020-03-25_11-07-36.png" width="476"/></p>
<p>6.執行get-pip.py取得pip安裝軟件</p>
<p>7.執行pip install依序下載以下模組      ex:pip install Markdown</p>
<p>有 <strong>Flask、</strong><strong>Markdown、</strong><strong>lxml、</strong><strong>bs4、</strong><strong>flask_cors、</strong><strong>pelican、</strong><strong>leo</strong></p>
<h2>week2.5</h2>
<p>1.第一次直播紀錄</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/e89PLiLRle8" width="956"></iframe></p>
<h2>week3</h2>
<h2>week4</h2>
<p>分組討論及小組會議</p>
<p>1.<a href="https://s40723119.github.io/cd2020/content/%E5%88%86%E7%B5%84%E8%A8%8E%E8%AB%96-%E5%9B%9B%E8%BC%AA%E6%A9%9F%E5%99%A8%E4%BA%BA.html">分組討論-四輪機器人</a></p>
<p>2.<a href="https://s40723138.github.io/cd2020ag4/content/%E7%9B%B4%E6%92%AD%E6%9C%83%E8%AD%B0%E8%A8%98%E9%8C%84.html">小組會議紀錄</a></p>
<h2>week5</h2>
<p>連假在家做口罩</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="506" src="https://www.youtube.com/embed/1qQu7UTg4H8" width="900"></iframe></p>
<h2>week6</h2>
<h2>week7</h2>
<h2>week8</h2>
<p>如何架設直播課程</p>
<p>1.至<a href="https://obsproject.com/">OBS官網</a>下載安裝軟體</p>
<p>2.將YOUTU/TWITCH的串流金鑰，複製進OBS的設定-串流內</p>
<p></p>
<p><img alt="" height="121" src="/images/obs64_2020-04-22_10-18-04.png" width="712"/></p>
<p>3.在OBS按下開始串流，並到YOUTU開始直播</p>
<p></p>
<p>使用Ivcam進行攝像頭視訊</p>
<p>1.在手機及電腦上下載<a href="https://www.e2esoft.com/ivcam/">Ivcam</a>安裝軟體</p>
<p>2.將手機以usb連接電腦，並將電腦與手機使用同一個網路進行連接</p>
<p></p>
<p>可能會遭遇的問題</p>
<p>Q:顯示器擷取為黑畫面</p>
<p>A:進入開始-顯示器設定-圖形設定，將OBS Studio設喜好設定，並用省電的顯卡，這樣就可以顯示了</p>
<h1>分組作業一:四輪機器人</h1>
<p><strong>CoppeliaSim簡介</strong></p>
<p>具有集成開發環境的機器人模擬器<span>CoppeliaSim</span>基於分佈式控制體系結構：可以通過嵌入式腳本，插件，<span>ROS</span>節點，<span>BlueZero</span>節點，遠程<span>API</span>客戶端或自定義解決方案分別控制每個對象<span>/</span>模型。這使<span>CoppeliaSim</span>非常通用，非常適合多機器人應用。控制器可以用<span>C / C ++</span>，<span>Python</span>，<span>Java</span>，<span>Lua</span>，<span>Matlab</span>，<span>Octave</span>或<span>Urbi</span>編寫。</p>
<p><strong>CoppeliaSim應用程序列表</strong></p>
<p>1.工廠自動化系統仿真</p>
<p>2.遠程監控</p>
<p>3.硬件控制</p>
<p>4.快速原型製作和驗證</p>
<p>5.安全監控</p>
<p>6.快速算法開發</p>
<p>7.機器人相關教育</p>
<p><strong>產品介紹</strong></p>
<p>CoppeliaSim可以用作獨立應用程序，也可以輕鬆地嵌入到主客戶端應用程序中：它的佔用空間小且精心設計的<span>API</span>使<span>CoppeliaSim</span>成為嵌入更高級別應用程序的理想選擇。集成的<span>Lua</span>腳本解釋器使<span>CoppeliaSim</span>成為了一種極其通用的應用程序，使用戶可以自由組合低級<span>/</span>高級功能以獲得新的高級功能。<strong> </strong></p>
<h1>分組作業二:webots使用</h1>
<p>因為圖形內容較多，直接複製我在分組網站所鑽寫的內容</p>
<p>1.<a href="https://s40723138.github.io/cd2020ag4/content/40723119.html">激光雷達傳感器 Lidar Sensors</a></p>
<h1>直播網站</h1>
<p>1.個人直播網站</p>
<p>2.小組直播網站</p><h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>