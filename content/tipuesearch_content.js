var tipuesearch = {"pages": [{'title': '每週編譯內容', 'text': '', 'tags': '', 'url': '每週編譯內容.html'}, {'title': 'week1', 'text': '建立cmsimde網站 \n 1. 2019Fall可攜套件.7z \n 2.在github下建立一個cd2020倉儲 \n 3.git clone https://github.com/s40723119/cd2020.git \n 4.如果CMSIMDE為空白，單獨git clone https://github.com/mdecourse/cmsimde.git \n 5.git submodule add  https://github.com/mdecourse/cmsimde.git \n 6.進入CMSIMDE，將up_dirup_dir內檔案複製到cd2020 \n 7.進入CMSIMDE，打python wsgi.py開始編輯網站 \n \n', 'tags': '', 'url': 'week1.html'}, {'title': 'week2', 'text': 'python3.8.2更新 \n 1.在 python官網 下載python3.8.2安裝包 \n 2.執行並點選Modify \n 3.將pip選項關閉 \n \n 4.下一步直到安裝完成 \n 5.更改啟動器路徑 \n \n 6.執行get-pip.py取得pip安裝軟件 \n 7.執行pip install依序下載以下模組\xa0 \xa0 \xa0 ex:pip install Markdown \n 有\xa0 Flask、 Markdown、 lxml、 bs4、 flask_cors、 pelican、 leo \n', 'tags': '', 'url': 'week2.html'}, {'title': 'week2.5', 'text': '1.第一次直播紀錄 \n \n', 'tags': '', 'url': 'week2.5.html'}, {'title': 'week3', 'text': '', 'tags': '', 'url': 'week3.html'}, {'title': 'week4', 'text': '分組討論及小組會議 \n 1. 分組討論-四輪機器人 \n 2. 小組會議紀錄 \n', 'tags': '', 'url': 'week4.html'}, {'title': 'week5', 'text': '連假在家做口罩 \n \n', 'tags': '', 'url': 'week5.html'}, {'title': 'week6', 'text': '', 'tags': '', 'url': 'week6.html'}, {'title': 'week7', 'text': '', 'tags': '', 'url': 'week7.html'}, {'title': 'week8', 'text': '如何架設直播課程 \n 1.至 OBS官網 下載安裝軟體 \n 2.將YOUTU/TWITCH的串流金鑰，複製進OBS的設定-串流內 \n \n \n 3.在OBS按下開始串流，並到YOUTU開始直播 \n \n 使用Ivcam進行攝像頭視訊 \n 1.在手機及電腦上下載 Ivcam 安裝軟體 \n 2.將手機以usb連接電腦，並將電腦與手機使用同一個網路進行連接 \n \n 可能會遭遇的問題 \n Q:顯示器擷取為黑畫面 \n A:進入開始-顯示器設定-圖形設定，將OBS Studio設喜好設定，並用省電的顯卡，這樣就可以顯示了', 'tags': '', 'url': 'week8.html'}, {'title': '分組討論-四輪機器人', 'text': 'CoppeliaSim簡介 \n 具有集成開發環境的機器人模擬器 CoppeliaSim 基於分佈式控制體系結構：可以通過嵌入式腳本，插件， ROS 節點， BlueZero 節點，遠程 API 客戶端或自定義解決方案分別控制每個對象 / 模型。這使 CoppeliaSim 非常通用，非常適合多機器人應用。控制器可以用 C / C ++ ， Python ， Java ， Lua ， Matlab ， Octave 或 Urbi 編寫。 \n CoppeliaSim應用程序列表 \n 1.工廠自動化系統仿真 \n 2.遠程監控 \n 3.硬件控制 \n 4.快速原型製作和驗證 \n 5.安全監控 \n 6.快速算法開發 \n 7.機器人相關教育 \n 產品介紹 \n CoppeliaSim可以用作獨立應用程序，也可以輕鬆地嵌入到主客戶端應用程序中：它的佔用空間小且精心設計的 API 使 CoppeliaSim 成為嵌入更高級別應用程序的理想選擇。集成的 Lua 腳本解釋器使 CoppeliaSim 成為了一種極其通用的應用程序，使用戶可以自由組合低級 / 高級功能以獲得新的高級功能。 \xa0 \n', 'tags': '', 'url': '分組討論-四輪機器人.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git', 'tags': '', 'url': 'About.html'}]};